(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{610:function(s,e,a){"use strict";a.r(e);var t=a(6),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("温故而知新，可以为师矣。")])]),s._v(" "),a("p",[s._v("什么是高阶函数， 在数学和计算机的定义里面，高阶函数至少要满足一下一个条件：")]),s._v(" "),a("ul",[a("li",[s._v("接受一个或者多个函数作为输入")]),s._v(" "),a("li",[s._v("输出一个函数")])]),s._v(" "),a("p",[s._v("越是高级的语言，越贴近计算，抽象度越高。这里不得不说函数式编程，函数式编程的一个特点就是，允许把函数本身作为一个参数传递给另一个函数，还允许返回一个函数。像 JavaScript 等")]),s._v(" "),a("h4",{attrs:{id:"map-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-函数"}},[s._v("#")]),s._v(" map()函数")]),s._v(" "),a("p",[s._v("map()是 Python 内置的高阶函数，它接收一个函数 f 和一个 list，并通过把函数 f 依次作用在 list 的每个元素上，得到一个新的 list 并返回。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("def f(x):\n    return x*x\nprint map(f, [1, 2, 3, 4, 5, 6, 7, 8, 9])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("输出结果")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[1, 4, 9, 10, 25, 36, 49, 64, 81]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"reduce-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reduce-函数"}},[s._v("#")]),s._v(" reduce()函数")]),s._v(" "),a("p",[s._v("reduce()函数也是 Python 内置的一个高阶函数。reduce()函数接收的参数和 map()类似，一个函数 f，一个 list，但行为和 map()不同，reduce()传入的函数 f 必须接收两个参数，reduce()对 list 的每个元素反复调用函数 f，并返回最终结果值。\n例如，编写一个 f 函数，接收 x 和 y，返回 x 和 y 的和：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("def f(x, y):\n    return x + y\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("调用 reduce(f, [1, 3, 5, 7, 9])时，reduce 函数将做如下计算：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("先计算头两个元素：f(1, 3)，结果为4；\n再把结果和第3个元素计算：f(4, 5)，结果为9；\n再把结果和第4个元素计算：f(9, 7)，结果为16；\n再把结果和第5个元素计算：f(16, 9)，结果为25；\n由于没有更多的元素了，计算结束，返回结果25。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("上述计算实际上是对 list 的所有元素求和。虽然 Python 内置了求和函数 sum()，但是，利用 reduce()求和也很简单。\nreduce()还可以接收第 3 个可选参数，作为计算的初始值。如果把初始值设为 100，计算：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("reduce(f, [1, 3, 5, 7, 9], 100)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("结果将变为 125，因为第一轮计算是：\n计算初始值和第一个元素：f(100, 1)，结果为 101。")]),s._v(" "),a("h4",{attrs:{id:"filter-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filter-函数"}},[s._v("#")]),s._v(" filter()函数")]),s._v(" "),a("p",[s._v("filter()函数是 Python 内置高阶函数，filter()函数接收一个函数 f 和一个 list，这个函数 f 的作用是对每个元素进行判断，返回 True 或 False，filter()根据判断结果自动过滤掉不符合条件的元素，返回由符合条件元素组成的新 list。\n例如，要从一个 list [1, 4, 6, 7, 9, 12, 17]中删除偶数，保留奇数，首先，要编写一个判断奇数的函数：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("def is_odd(x):\n    return x % 2 == 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("然后，利用 filter()过滤掉偶数：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("filter(is_odd, [1, 4, 6, 7, 9, 12, 17])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("结果：[1, 7, 9, 17]\n利用 filter()，可以完成很多有用的功能，例如，删除 None 或者空字符串：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("def is_not_empty(s):\n    return s and len(s.strip()) > 0\nfilter(is_not_empty, ['test', None, '', 'str', '  ', 'END'])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("结果：['test', 'str', 'END']\n注意: s.strip(rm) 删除 s 字符串中开头、结尾处的 rm 序列的字符。\n当 rm 为空时，默认删除空白符（包括'\\n', '\\r', '\\t', ' ')，如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("a = '     123'\na.strip()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("结果： '123'")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("a='\\t\\t123\\r\\n'\na.strip()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("结果：'123'")]),s._v(" "),a("h4",{attrs:{id:"自定义排序函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义排序函数"}},[s._v("#")]),s._v(" 自定义排序函数")]),s._v(" "),a("p",[s._v("Python 内置的 sorted()函数可对 list 进行排序：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(">>>sorted([36, 5, 12, 9, 21])\n[5, 9, 12, 21, 36]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("但 sorted()也是一个高阶函数，它可以接收一个比较函数来实现自定义排序，比较函数的定义是，传入两个待比较的元素 x, y，如果 x 应该排在 y 的前面，返回 -1，如果 x 应该排在 y 的后面，返回 1。如果 x 和 y 相等，返回 0。\n因此，如果我们要实现倒序排序，只需要编写一个 reversed_cmp 函数：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("def reversed_cmp(x, y):\n    if x > y:\n        return -1\n    if x < y:\n        return 1\n    return 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这样，调用 sorted() 并传入 reversed_cmp 就可以实现倒序排序：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(">>> sorted([36, 5, 12, 9, 21], reversed_cmp)\n[36, 21, 12, 9, 5]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("sorted()也可以对字符串进行排序，字符串默认按照 ASCII 大小来比较：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(">>> sorted(['bob', 'about', 'Zoe', 'Credit'])\n['Credit', 'Zoe', 'about', 'bob']\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("'Zoe'排在'about'之前是因为'Z'的 ASCII 码比'a'小。")])])}),[],!1,null,null,null);e.default=n.exports}}]);