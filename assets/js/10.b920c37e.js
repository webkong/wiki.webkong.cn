(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{527:function(t,s,a){t.exports=a.p+"assets/img/lua_file_1.f0b79e92.png"},528:function(t,s,a){t.exports=a.p+"assets/img/lua_file_2.1eafa02f.png"},529:function(t,s,a){t.exports=a.p+"assets/img/lua_file_3.f5f603c0.png"},530:function(t,s,a){t.exports=a.p+"assets/img/lua_file_4.a3c6274e.png"},598:function(t,s,a){"use strict";a.r(s);var e=a(6),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Lua I/O 库提供两种不同的方式处理文件：隐式文件描述，显式文件描述。")]),t._v(" "),e("p",[t._v("这些文件 I/O 操作，在 OpenResty 的上下文中对事件循环是会产生阻塞效应。 OpenResty 比较擅长的是高并发网络处理，在这个环境中，任何文件的操作，都将阻塞其他并行执行的请求。实际中的应用，在 OpenResty 项目中应尽可能让网络处理部分、文件 I/0 操作部分相互独立，不要揉和在一起。")]),t._v(" "),e("h3",{attrs:{id:"隐式文件描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#隐式文件描述"}},[t._v("#")]),t._v(" 隐式文件描述")]),t._v(" "),e("p",[t._v("设置一个默认的输入或输出文件，然后在这个文件上进行所有的输入或输出操作。所有的操作函数由 io 表提供。")]),t._v(" "),e("blockquote",[e("p",[t._v("打开已经存在的 "),e("code",[t._v("test1.txt")]),t._v(" 文件，并读取里面的内容")])]),t._v(" "),e("div",{staticClass:"language-lua line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[t._v("file "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" io"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("input")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test1.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用 io.input() 函数打开文件")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeat")]),t._v("\n    line "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" io"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 逐行读取内容，文件结束时返回nil")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" line "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("line"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("until")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nio"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 关闭文件")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--\x3e output")]),t._v("\nmy test file\nhello\nlua\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("blockquote",[e("p",[t._v("在 "),e("code",[t._v("test1.txt")]),t._v(' 文件的最后添加一行 "hello world"')])]),t._v(" "),e("div",{staticClass:"language-lua line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[t._v("file "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" io"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test1.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a+"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用 io.open() 函数，以添加模式打开文件")]),t._v("\nio"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("output")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用 io.output() 函数，设置默认输出文件")]),t._v("\nio"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\nhello world"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用 io.write() 函数，把内容写到文件")]),t._v("\nio"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("在相应目录下打开"),e("code",[t._v("test1.txt")]),t._v("文件，查看文件内容发生的变化。")]),t._v(" "),e("h3",{attrs:{id:"显式文件描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#显式文件描述"}},[t._v("#")]),t._v(" 显式文件描述")]),t._v(" "),e("p",[t._v("使用 file:XXX() 函数方式进行操作,其中 file 为 io.open() 返回的文件句柄。")]),t._v(" "),e("blockquote",[e("p",[t._v("打开已经存在的 test2.txt 文件，并读取里面的内容")])]),t._v(" "),e("div",{staticClass:"language-lua line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[t._v("file "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" io"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test2.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"r"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用 io.open() 函数，以只读模式打开文件")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" line "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" file"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("lines")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用 file:lines() 函数逐行读取文件")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("line"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\nfile"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--\x3eoutput")]),t._v("\nmy test2\nhello lua\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("blockquote",[e("p",[t._v('在 test2.txt 文件的最后添加一行 "hello world"')])]),t._v(" "),e("div",{staticClass:"language-lua line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[t._v("file "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" io"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test2.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用 io.open() 函数，以添加模式打开文件")]),t._v("\nfile"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\nhello world"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用 file:open() 函数，在文件末尾追加内容")]),t._v("\nfile"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("在相应目录下打开"),e("code",[t._v("test2.txt")]),t._v("文件，查看文件内容发生的变化。")]),t._v(" "),e("h3",{attrs:{id:"文件操作函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件操作函数"}},[t._v("#")]),t._v(" 文件操作函数")]),t._v(" "),e("h4",{attrs:{id:"io-open-filename-mode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io-open-filename-mode"}},[t._v("#")]),t._v(" io.open (filename [, mode])")]),t._v(" "),e("p",[t._v("按指定的模式 mode，打开一个文件名为"),e("code",[t._v("filename")]),t._v("的文件，成功则返回文件句柄，失败则返回 nil 加错误信息。模式：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(527),alt:"mode"}})]),t._v(" "),e("p",[t._v("模式字符串后面可以有一个 'b'，用于在某些系统中打开二进制文件。")]),t._v(" "),e("p",[t._v('注意 "w" 和 "wb" 的区别')]),t._v(" "),e("ul",[e("li",[e("p",[t._v("“w” 表示文本文件。某些文件系统(如 Linux 的文件系统)认为 0x0A 为文本文件的换行符，Windows 的文件系统认为 0x0D0A 为文本文件的换行符。为了兼容其他文件系统（如从 Linux 拷贝来的文件），Windows 的文件系统在写文件时，会在文件中 0x0A 的前面加上 0x0D。使用 “w”，其属性要看所在的平台。")])]),t._v(" "),e("li",[e("p",[t._v("“wb” 表示二进制文件。文件系统会按纯粹的二进制格式进行写操作，因此也就不存在格式转换的问题。（Linux 文件系统下 “w” 和 “wb” 没有区别）")])])]),t._v(" "),e("h4",{attrs:{id:"file-close"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-close"}},[t._v("#")]),t._v(" file:close ()")]),t._v(" "),e("p",[t._v("关闭文件。注意：当文件句柄被垃圾收集后，文件将自动关闭。句柄将变为一个不可预知的值。")]),t._v(" "),e("h4",{attrs:{id:"io-close-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io-close-file"}},[t._v("#")]),t._v(" io.close ([file])")]),t._v(" "),e("p",[t._v("关闭文件，和 file:close() 的作用相同。没有参数 file 时，关闭默认输出文件。")]),t._v(" "),e("h4",{attrs:{id:"file-flush"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-flush"}},[t._v("#")]),t._v(" file:flush ()")]),t._v(" "),e("p",[t._v("把写入缓冲区的所有数据写入到文件 file 中。")]),t._v(" "),e("h4",{attrs:{id:"io-flush"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io-flush"}},[t._v("#")]),t._v(" io.flush ()")]),t._v(" "),e("p",[t._v("相当于 file:flush()，把写入缓冲区的所有数据写入到默认输出文件。")]),t._v(" "),e("h4",{attrs:{id:"io-input-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io-input-file"}},[t._v("#")]),t._v(" io.input ([file])")]),t._v(" "),e("p",[t._v("当使用一个文件名调用时，打开这个文件（以文本模式），并设置文件句柄为默认输入文件；\n当使用一个文件句柄调用时，设置此文件句柄为默认输入文件；\n当不使用参数调用时，返回默认输入文件句柄。")]),t._v(" "),e("h4",{attrs:{id:"file-lines"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-lines"}},[t._v("#")]),t._v(" file:lines ()")]),t._v(" "),e("p",[t._v("返回一个迭代函数,每次调用将获得文件中的一行内容,当到文件尾时，将返回 nil，但不关闭文件。")]),t._v(" "),e("h4",{attrs:{id:"io-lines-filename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io-lines-filename"}},[t._v("#")]),t._v(" io.lines ([filename])")]),t._v(" "),e("p",[t._v("打开指定的文件 filename 为读模式并返回一个迭代函数,每次调用将获得文件中的一行内容,当到文件尾时，将返回 nil，并自动关闭文件。若不带参数时 io.lines() 等价于 io.input():lines() 读取默认输入设备的内容，结束时不关闭文件。")]),t._v(" "),e("h4",{attrs:{id:"io-output-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io-output-file"}},[t._v("#")]),t._v(" io.output ([file])")]),t._v(" "),e("p",[t._v("类似于 io.input，但操作在默认输出文件上。")]),t._v(" "),e("h4",{attrs:{id:"file-read"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-read"}},[t._v("#")]),t._v(" file:read (...)")]),t._v(" "),e("p",[t._v("按指定的格式读取一个文件。按每个格式将返回一个字符串或数字,如果不能正确读取将返回 nil,若没有指定格式将指默认按行方式进行读取。格式：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(528),alt:"read"}})]),t._v(" "),e("h4",{attrs:{id:"io-read"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io-read"}},[t._v("#")]),t._v(" io.read (...)")]),t._v(" "),e("p",[t._v("相当于 io.input():read")]),t._v(" "),e("h4",{attrs:{id:"io-type-obj"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io-type-obj"}},[t._v("#")]),t._v(" io.type (obj)")]),t._v(" "),e("p",[t._v('检测 obj 是否一个可用的文件句柄。如果 obj 是一个打开的文件句柄，则返回 "file" 如果 obj 是一个已关闭的文件句柄，则返回 "closed file" 如果 obj 不是一个文件句柄，则返回 nil。')]),t._v(" "),e("h4",{attrs:{id:"file-write"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-write"}},[t._v("#")]),t._v(" file:write (...)")]),t._v(" "),e("p",[t._v("把每一个参数的值写入文件。参数必须为字符串或数字，若要输出其它值，则需通过 tostring 或 string.format 进行转换。")]),t._v(" "),e("h4",{attrs:{id:"io-write"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io-write"}},[t._v("#")]),t._v(" io.write (...)")]),t._v(" "),e("p",[t._v("相当于 io.output():write。")]),t._v(" "),e("h4",{attrs:{id:"file-seek-whence-offset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-seek-whence-offset"}},[t._v("#")]),t._v(" file:seek ([whence] [, offset])")]),t._v(" "),e("p",[t._v('设置和获取当前文件位置，成功则返回最终的文件位置(按字节，相对于文件开头),失败则返回 nil 加错误信息。缺省时，whence 默认为 "cur"，offset 默认为 0。\n参数 whence：')]),t._v(" "),e("p",[e("img",{attrs:{src:a(529),alt:"whence"}})]),t._v(" "),e("h4",{attrs:{id:"file-setvbuf-mode-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-setvbuf-mode-size"}},[t._v("#")]),t._v(" file:setvbuf (mode [, size])")]),t._v(" "),e("p",[t._v("设置输出文件的缓冲模式。模式：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(530),alt:"buf"}})]),t._v(" "),e("p",[t._v("最后两种模式，size 可以指定缓冲的大小(按字节)，忽略 size 将自动调整为最佳的大小。")]),t._v(" "),e("p",[t._v("原文\n"),e("a",{attrs:{href:"https://moonbingbing.gitbooks.io/openresty-best-practices/content/lua/file.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://moonbingbing.gitbooks.io/openresty-best-practices/content/lua/file.html"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);