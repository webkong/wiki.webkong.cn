(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{523:function(e,t,r){e.exports=r.p+"assets/img/struct-of-browser.7ba7cd1c.png"},524:function(e,t,r){e.exports=r.p+"assets/img/rendering.0236b239.png"},525:function(e,t,r){e.exports=r.p+"assets/img/render-dom.85a66640.png"},575:function(e,t,r){"use strict";r.r(t);var s=r(6),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("#CSS 渲染")]),e._v(" "),s("blockquote",[s("p",[e._v("css 是从右向左解析的")])]),e._v(" "),s("blockquote",[s("p",[e._v("一开始我看到这个从右向左解析渲染的时候，也是呆了一下，但是想想这确实是目前效率最高的方式了。")])]),e._v(" "),s("blockquote",[s("p",[e._v("OK，开始。")])]),e._v(" "),s("h3",{attrs:{id:"浏览器架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器架构"}},[e._v("#")]),e._v(" 浏览器架构")]),e._v(" "),s("p",[s("img",{attrs:{src:r(523),alt:"浏览器的一般结构"}})]),e._v(" "),s("p",[e._v("1.用户界面 - 用户使用的界面：地址栏，书签，前进后退等")]),e._v(" "),s("p",[e._v("2.浏览器引擎 - 在用户界面和渲染引擎之间传递指令")]),e._v(" "),s("p",[e._v("3.渲染引擎 - 负责显示请求的内容，解析一些 HTML、CSS 并显示到屏幕")]),e._v(" "),s("p",[e._v("4.网络层 - 网络调用，比如：http、websocket 等")]),e._v(" "),s("p",[e._v("5.JavaScript 解释器 - 用于解释执行 JavaScript 代码")]),e._v(" "),s("p",[e._v("6.用户界面后端 -")]),e._v(" "),s("p",[e._v("7.数据存储 - 浏览器需要将持久化的数据存储在硬盘上。不如 Cookie、localstroge 等")]),e._v(" "),s("blockquote",[s("p",[e._v("我主要讨论一下渲染引擎")])]),e._v(" "),s("h4",{attrs:{id:"渲染引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎"}},[e._v("#")]),e._v(" 渲染引擎")]),e._v(" "),s("p",[e._v("渲染引擎从网络层获取到请求问道的内容之后，就会执行如下基本流程：\n"),s("img",{attrs:{src:r(524),alt:""}})]),e._v(" "),s("p",[e._v("1.渲染引擎开始解析 HTML 文档，并将各个"),s("code",[e._v("标记")]),e._v("逐渐转化成 DOM 树上的 DOM 节点。同时，解析外部 CSS 文件以及样式元素中的样式数据。等所有 CSS 文件获取成功后，结合内部"),s("code",[e._v("style")]),e._v("和行内样式，生成 render 树，render 树包含了每个 DOM 的节点的样式信息。")]),e._v(" "),s("p",[e._v("2.结合 DOM 树和 render 树来绘制页面。")]),e._v(" "),s("blockquote",[s("p",[e._v("CSS 是从右向左解析的")])]),e._v(" "),s("blockquote",[s("p",[e._v("构建 render 树的过程是遍历 dom 树，每次拿到一个 dom 节点，然后遍历所有的样式规则，查找与当前节点匹配的规则，最后将所有匹配的规则中定义的样式写入到一个 render 对象，再将 render 对象挂到 render 树上（建立对象和 render 树的联系）。如图：")])]),e._v(" "),s("p",[s("img",{attrs:{src:r(525),alt:""}})]),e._v(" "),s("blockquote",[s("p",[e._v("也就是说，每一个 dom，已知的是 class，id 和 tabName "),s("code",[e._v('<a id="aa" class="bb" href="">')]),e._v(" ，但是匹配的规则可能有成千上万条，渲染引擎需要从中找到符合条件的 1 条或者多条（数量不会很多）。")])]),e._v(" "),s("blockquote",[s("p",[e._v("由于每条规则都有很多嵌套例如： "),s("code",[e._v("#content .box p{} .title a{}")])])]),e._v(" "),s("blockquote",[s("p",[e._v("假如采用从左向右的方式读取 CSS 规则，那么大多数的规则读取到后面发现是不匹配的，会浪费很多时间在无用的匹配上。")])]),e._v(" "),s("blockquote",[s("p",[e._v("所以，采用从右向左匹配就会在发现最后边或者次右边的选择器不匹配，整个规则就可以跳过了。")])]),e._v(" "),s("p",[e._v("在 css 模块化了之后，模块打包到一个 css 文件中了。 比如：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(".model_a a{...}\n.model_b a{...}\n.model_c a{...}\n.model_d a{...}\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("浏览器会遍历所有的 a，所以加大了匹配时间，所以，提倡不用 tag 标签来定义样式，一律用类 "),s("code",[e._v(".class")])]),e._v(" "),s("h3",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),s("p",[s("a",{attrs:{href:"http://taligarsiel.com/Projects/howbrowserswork1.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("How browsers work"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://www.cnblogs.com/lhb25/p/how-browsers-work.html#The_browsers_we_will_talk_about",target:"_blank",rel:"noopener noreferrer"}},[e._v("中文 How browsers work"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://stackoverflow.com/questions/5797014/why-do-browsers-match-css-selectors-from-right-to-left",target:"_blank",rel:"noopener noreferrer"}},[e._v("Why do browsers match CSS selectors from right to left?"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=o.exports}}]);